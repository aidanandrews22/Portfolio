type Todo @aws_iam {
  content: String
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type BlogPostLike @aws_iam @aws_api_key {
  id: String!
  count: Int!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input AmplifyAIConversationTurnErrorInput {
  errorType: String!
  message: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelTodoConnection @aws_iam {
  items: [Todo]!
  nextToken: String
}

input ModelTodoFilterInput {
  content: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelTodoFilterInput]
  or: [ModelTodoFilterInput]
  not: ModelTodoFilterInput
}

type Query {
  getTodo(id: ID!): Todo @aws_iam
  listTodos(filter: ModelTodoFilterInput, limit: Int, nextToken: String): ModelTodoConnection @aws_iam
  getBlogPostLike(id: String!): BlogPostLike @aws_iam
  listBlogPostLikes(id: String, filter: ModelBlogPostLikeFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelBlogPostLikeConnection @aws_iam
}

input ModelTodoConditionInput {
  content: ModelStringInput
  and: [ModelTodoConditionInput]
  or: [ModelTodoConditionInput]
  not: ModelTodoConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateTodoInput {
  content: String
  id: ID
}

input UpdateTodoInput {
  content: String
  id: ID!
}

input DeleteTodoInput {
  id: ID!
}

type Mutation {
  createTodo(input: CreateTodoInput!, condition: ModelTodoConditionInput): Todo @aws_iam
  updateTodo(input: UpdateTodoInput!, condition: ModelTodoConditionInput): Todo @aws_iam
  deleteTodo(input: DeleteTodoInput!, condition: ModelTodoConditionInput): Todo @aws_iam
  createBlogPostLike(input: CreateBlogPostLikeInput!, condition: ModelBlogPostLikeConditionInput): BlogPostLike @aws_api_key @aws_iam
  updateBlogPostLike(input: UpdateBlogPostLikeInput!, condition: ModelBlogPostLikeConditionInput): BlogPostLike @aws_api_key @aws_iam
  deleteBlogPostLike(input: DeleteBlogPostLikeInput!, condition: ModelBlogPostLikeConditionInput): BlogPostLike @aws_api_key @aws_iam
}

input ModelSubscriptionTodoFilterInput {
  content: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionTodoFilterInput]
  or: [ModelSubscriptionTodoFilterInput]
}

type Subscription {
  onCreateTodo(filter: ModelSubscriptionTodoFilterInput): Todo @aws_subscribe(mutations: ["createTodo"]) @aws_iam
  onUpdateTodo(filter: ModelSubscriptionTodoFilterInput): Todo @aws_subscribe(mutations: ["updateTodo"]) @aws_iam
  onDeleteTodo(filter: ModelSubscriptionTodoFilterInput): Todo @aws_subscribe(mutations: ["deleteTodo"]) @aws_iam
  onCreateBlogPostLike(filter: ModelSubscriptionBlogPostLikeFilterInput): BlogPostLike @aws_subscribe(mutations: ["createBlogPostLike"]) @aws_iam
  onUpdateBlogPostLike(filter: ModelSubscriptionBlogPostLikeFilterInput): BlogPostLike @aws_subscribe(mutations: ["updateBlogPostLike"]) @aws_iam
  onDeleteBlogPostLike(filter: ModelSubscriptionBlogPostLikeFilterInput): BlogPostLike @aws_subscribe(mutations: ["deleteBlogPostLike"]) @aws_iam
}

type ModelBlogPostLikeConnection @aws_iam {
  items: [BlogPostLike]!
  nextToken: String
}

input ModelBlogPostLikeFilterInput {
  id: ModelStringInput
  count: ModelIntInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelBlogPostLikeFilterInput]
  or: [ModelBlogPostLikeFilterInput]
  not: ModelBlogPostLikeFilterInput
}

input ModelBlogPostLikeConditionInput {
  count: ModelIntInput
  and: [ModelBlogPostLikeConditionInput]
  or: [ModelBlogPostLikeConditionInput]
  not: ModelBlogPostLikeConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateBlogPostLikeInput {
  id: String
  count: Int!
}

input UpdateBlogPostLikeInput {
  id: String!
  count: Int
}

input DeleteBlogPostLikeInput {
  id: String!
}

input ModelSubscriptionBlogPostLikeFilterInput {
  id: ModelSubscriptionStringInput
  count: ModelSubscriptionIntInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionBlogPostLikeFilterInput]
  or: [ModelSubscriptionBlogPostLikeFilterInput]
}
